package cn.mucute.merminal.core

/**
 * Implementation of wcwidth(3) for Unicode 9.
 *
 *
 * Implementation from https://github.com/jquast/wcwidth but we return 0 for unprintable characters.
 */
object WcWidth {
    // From https://github.com/jquast/wcwidth/blob/master/wcwidth/table_zero.py
    // t commit 0d7de112202cc8b2ebe9232ff4a5c954f19d561a (2016-07-02):
    private val ZERO_WIDTH = arrayOf(
        intArrayOf(0x0300, 0x036f),
        intArrayOf(0x0483, 0x0489),
        intArrayOf(0x0591, 0x05bd),
        intArrayOf(0x05bf, 0x05bf),
        intArrayOf(0x05c1, 0x05c2),
        intArrayOf(0x05c4, 0x05c5),
        intArrayOf(0x05c7, 0x05c7),
        intArrayOf(0x0610, 0x061a),
        intArrayOf(0x064b, 0x065f),
        intArrayOf(0x0670, 0x0670),
        intArrayOf(0x06d6, 0x06dc),
        intArrayOf(0x06df, 0x06e4),
        intArrayOf(0x06e7, 0x06e8),
        intArrayOf(0x06ea, 0x06ed),
        intArrayOf(0x0711, 0x0711),
        intArrayOf(0x0730, 0x074a),
        intArrayOf(0x07a6, 0x07b0),
        intArrayOf(0x07eb, 0x07f3),
        intArrayOf(0x0816, 0x0819),
        intArrayOf(0x081b, 0x0823),
        intArrayOf(0x0825, 0x0827),
        intArrayOf(0x0829, 0x082d),
        intArrayOf(0x0859, 0x085b),
        intArrayOf(0x08d4, 0x08e1),
        intArrayOf(0x08e3, 0x0902),
        intArrayOf(0x093a, 0x093a),
        intArrayOf(0x093c, 0x093c),
        intArrayOf(0x0941, 0x0948),
        intArrayOf(0x094d, 0x094d),
        intArrayOf(0x0951, 0x0957),
        intArrayOf(0x0962, 0x0963),
        intArrayOf(0x0981, 0x0981),
        intArrayOf(0x09bc, 0x09bc),
        intArrayOf(0x09c1, 0x09c4),
        intArrayOf(0x09cd, 0x09cd),
        intArrayOf(0x09e2, 0x09e3),
        intArrayOf(0x0a01, 0x0a02),
        intArrayOf(0x0a3c, 0x0a3c),
        intArrayOf(0x0a41, 0x0a42),
        intArrayOf(0x0a47, 0x0a48),
        intArrayOf(0x0a4b, 0x0a4d),
        intArrayOf(0x0a51, 0x0a51),
        intArrayOf(0x0a70, 0x0a71),
        intArrayOf(0x0a75, 0x0a75),
        intArrayOf(0x0a81, 0x0a82),
        intArrayOf(0x0abc, 0x0abc),
        intArrayOf(0x0ac1, 0x0ac5),
        intArrayOf(0x0ac7, 0x0ac8),
        intArrayOf(0x0acd, 0x0acd),
        intArrayOf(0x0ae2, 0x0ae3),
        intArrayOf(0x0b01, 0x0b01),
        intArrayOf(0x0b3c, 0x0b3c),
        intArrayOf(0x0b3f, 0x0b3f),
        intArrayOf(0x0b41, 0x0b44),
        intArrayOf(0x0b4d, 0x0b4d),
        intArrayOf(0x0b56, 0x0b56),
        intArrayOf(0x0b62, 0x0b63),
        intArrayOf(0x0b82, 0x0b82),
        intArrayOf(0x0bc0, 0x0bc0),
        intArrayOf(0x0bcd, 0x0bcd),
        intArrayOf(0x0c00, 0x0c00),
        intArrayOf(0x0c3e, 0x0c40),
        intArrayOf(0x0c46, 0x0c48),
        intArrayOf(0x0c4a, 0x0c4d),
        intArrayOf(0x0c55, 0x0c56),
        intArrayOf(0x0c62, 0x0c63),
        intArrayOf(0x0c81, 0x0c81),
        intArrayOf(0x0cbc, 0x0cbc),
        intArrayOf(0x0cbf, 0x0cbf),
        intArrayOf(0x0cc6, 0x0cc6),
        intArrayOf(0x0ccc, 0x0ccd),
        intArrayOf(0x0ce2, 0x0ce3),
        intArrayOf(0x0d01, 0x0d01),
        intArrayOf(0x0d41, 0x0d44),
        intArrayOf(0x0d4d, 0x0d4d),
        intArrayOf(0x0d62, 0x0d63),
        intArrayOf(0x0dca, 0x0dca),
        intArrayOf(0x0dd2, 0x0dd4),
        intArrayOf(0x0dd6, 0x0dd6),
        intArrayOf(0x0e31, 0x0e31),
        intArrayOf(0x0e34, 0x0e3a),
        intArrayOf(0x0e47, 0x0e4e),
        intArrayOf(0x0eb1, 0x0eb1),
        intArrayOf(0x0eb4, 0x0eb9),
        intArrayOf(0x0ebb, 0x0ebc),
        intArrayOf(0x0ec8, 0x0ecd),
        intArrayOf(0x0f18, 0x0f19),
        intArrayOf(0x0f35, 0x0f35),
        intArrayOf(0x0f37, 0x0f37),
        intArrayOf(0x0f39, 0x0f39),
        intArrayOf(0x0f71, 0x0f7e),
        intArrayOf(0x0f80, 0x0f84),
        intArrayOf(0x0f86, 0x0f87),
        intArrayOf(0x0f8d, 0x0f97),
        intArrayOf(0x0f99, 0x0fbc),
        intArrayOf(0x0fc6, 0x0fc6),
        intArrayOf(0x102d, 0x1030),
        intArrayOf(0x1032, 0x1037),
        intArrayOf(0x1039, 0x103a),
        intArrayOf(0x103d, 0x103e),
        intArrayOf(0x1058, 0x1059),
        intArrayOf(0x105e, 0x1060),
        intArrayOf(0x1071, 0x1074),
        intArrayOf(0x1082, 0x1082),
        intArrayOf(0x1085, 0x1086),
        intArrayOf(0x108d, 0x108d),
        intArrayOf(0x109d, 0x109d),
        intArrayOf(0x135d, 0x135f),
        intArrayOf(0x1712, 0x1714),
        intArrayOf(0x1732, 0x1734),
        intArrayOf(0x1752, 0x1753),
        intArrayOf(0x1772, 0x1773),
        intArrayOf(0x17b4, 0x17b5),
        intArrayOf(0x17b7, 0x17bd),
        intArrayOf(0x17c6, 0x17c6),
        intArrayOf(0x17c9, 0x17d3),
        intArrayOf(0x17dd, 0x17dd),
        intArrayOf(0x180b, 0x180d),
        intArrayOf(0x1885, 0x1886),
        intArrayOf(0x18a9, 0x18a9),
        intArrayOf(0x1920, 0x1922),
        intArrayOf(0x1927, 0x1928),
        intArrayOf(0x1932, 0x1932),
        intArrayOf(0x1939, 0x193b),
        intArrayOf(0x1a17, 0x1a18),
        intArrayOf(0x1a1b, 0x1a1b),
        intArrayOf(0x1a56, 0x1a56),
        intArrayOf(0x1a58, 0x1a5e),
        intArrayOf(0x1a60, 0x1a60),
        intArrayOf(0x1a62, 0x1a62),
        intArrayOf(0x1a65, 0x1a6c),
        intArrayOf(0x1a73, 0x1a7c),
        intArrayOf(0x1a7f, 0x1a7f),
        intArrayOf(0x1ab0, 0x1abe),
        intArrayOf(0x1b00, 0x1b03),
        intArrayOf(0x1b34, 0x1b34),
        intArrayOf(0x1b36, 0x1b3a),
        intArrayOf(0x1b3c, 0x1b3c),
        intArrayOf(0x1b42, 0x1b42),
        intArrayOf(0x1b6b, 0x1b73),
        intArrayOf(0x1b80, 0x1b81),
        intArrayOf(0x1ba2, 0x1ba5),
        intArrayOf(0x1ba8, 0x1ba9),
        intArrayOf(0x1bab, 0x1bad),
        intArrayOf(0x1be6, 0x1be6),
        intArrayOf(0x1be8, 0x1be9),
        intArrayOf(0x1bed, 0x1bed),
        intArrayOf(0x1bef, 0x1bf1),
        intArrayOf(0x1c2c, 0x1c33),
        intArrayOf(0x1c36, 0x1c37),
        intArrayOf(0x1cd0, 0x1cd2),
        intArrayOf(0x1cd4, 0x1ce0),
        intArrayOf(0x1ce2, 0x1ce8),
        intArrayOf(0x1ced, 0x1ced),
        intArrayOf(0x1cf4, 0x1cf4),
        intArrayOf(0x1cf8, 0x1cf9),
        intArrayOf(0x1dc0, 0x1df5),
        intArrayOf(0x1dfb, 0x1dff),
        intArrayOf(0x20d0, 0x20f0),
        intArrayOf(0x2cef, 0x2cf1),
        intArrayOf(0x2d7f, 0x2d7f),
        intArrayOf(0x2de0, 0x2dff),
        intArrayOf(0x302a, 0x302d),
        intArrayOf(0x3099, 0x309a),
        intArrayOf(0xa66f, 0xa672),
        intArrayOf(0xa674, 0xa67d),
        intArrayOf(0xa69e, 0xa69f),
        intArrayOf(0xa6f0, 0xa6f1),
        intArrayOf(0xa802, 0xa802),
        intArrayOf(0xa806, 0xa806),
        intArrayOf(0xa80b, 0xa80b),
        intArrayOf(0xa825, 0xa826),
        intArrayOf(0xa8c4, 0xa8c5),
        intArrayOf(0xa8e0, 0xa8f1),
        intArrayOf(0xa926, 0xa92d),
        intArrayOf(0xa947, 0xa951),
        intArrayOf(0xa980, 0xa982),
        intArrayOf(0xa9b3, 0xa9b3),
        intArrayOf(0xa9b6, 0xa9b9),
        intArrayOf(0xa9bc, 0xa9bc),
        intArrayOf(0xa9e5, 0xa9e5),
        intArrayOf(0xaa29, 0xaa2e),
        intArrayOf(0xaa31, 0xaa32),
        intArrayOf(0xaa35, 0xaa36),
        intArrayOf(0xaa43, 0xaa43),
        intArrayOf(0xaa4c, 0xaa4c),
        intArrayOf(0xaa7c, 0xaa7c),
        intArrayOf(0xaab0, 0xaab0),
        intArrayOf(0xaab2, 0xaab4),
        intArrayOf(0xaab7, 0xaab8),
        intArrayOf(0xaabe, 0xaabf),
        intArrayOf(0xaac1, 0xaac1),
        intArrayOf(0xaaec, 0xaaed),
        intArrayOf(0xaaf6, 0xaaf6),
        intArrayOf(0xabe5, 0xabe5),
        intArrayOf(0xabe8, 0xabe8),
        intArrayOf(0xabed, 0xabed),
        intArrayOf(0xfb1e, 0xfb1e),
        intArrayOf(0xfe00, 0xfe0f),
        intArrayOf(0xfe20, 0xfe2f),
        intArrayOf(0x101fd, 0x101fd),
        intArrayOf(0x102e0, 0x102e0),
        intArrayOf(0x10376, 0x1037a),
        intArrayOf(0x10a01, 0x10a03),
        intArrayOf(0x10a05, 0x10a06),
        intArrayOf(0x10a0c, 0x10a0f),
        intArrayOf(0x10a38, 0x10a3a),
        intArrayOf(0x10a3f, 0x10a3f),
        intArrayOf(0x10ae5, 0x10ae6),
        intArrayOf(0x11001, 0x11001),
        intArrayOf(0x11038, 0x11046),
        intArrayOf(0x1107f, 0x11081),
        intArrayOf(0x110b3, 0x110b6),
        intArrayOf(0x110b9, 0x110ba),
        intArrayOf(0x11100, 0x11102),
        intArrayOf(0x11127, 0x1112b),
        intArrayOf(0x1112d, 0x11134),
        intArrayOf(0x11173, 0x11173),
        intArrayOf(0x11180, 0x11181),
        intArrayOf(0x111b6, 0x111be),
        intArrayOf(0x111ca, 0x111cc),
        intArrayOf(0x1122f, 0x11231),
        intArrayOf(0x11234, 0x11234),
        intArrayOf(0x11236, 0x11237),
        intArrayOf(0x1123e, 0x1123e),
        intArrayOf(0x112df, 0x112df),
        intArrayOf(0x112e3, 0x112ea),
        intArrayOf(0x11300, 0x11301),
        intArrayOf(0x1133c, 0x1133c),
        intArrayOf(0x11340, 0x11340),
        intArrayOf(0x11366, 0x1136c),
        intArrayOf(0x11370, 0x11374),
        intArrayOf(0x11438, 0x1143f),
        intArrayOf(0x11442, 0x11444),
        intArrayOf(0x11446, 0x11446),
        intArrayOf(0x114b3, 0x114b8),
        intArrayOf(0x114ba, 0x114ba),
        intArrayOf(0x114bf, 0x114c0),
        intArrayOf(0x114c2, 0x114c3),
        intArrayOf(0x115b2, 0x115b5),
        intArrayOf(0x115bc, 0x115bd),
        intArrayOf(0x115bf, 0x115c0),
        intArrayOf(0x115dc, 0x115dd),
        intArrayOf(0x11633, 0x1163a),
        intArrayOf(0x1163d, 0x1163d),
        intArrayOf(0x1163f, 0x11640),
        intArrayOf(0x116ab, 0x116ab),
        intArrayOf(0x116ad, 0x116ad),
        intArrayOf(0x116b0, 0x116b5),
        intArrayOf(0x116b7, 0x116b7),
        intArrayOf(0x1171d, 0x1171f),
        intArrayOf(0x11722, 0x11725),
        intArrayOf(0x11727, 0x1172b),
        intArrayOf(0x11c30, 0x11c36),
        intArrayOf(0x11c38, 0x11c3d),
        intArrayOf(0x11c3f, 0x11c3f),
        intArrayOf(0x11c92, 0x11ca7),
        intArrayOf(0x11caa, 0x11cb0),
        intArrayOf(0x11cb2, 0x11cb3),
        intArrayOf(0x11cb5, 0x11cb6),
        intArrayOf(0x16af0, 0x16af4),
        intArrayOf(0x16b30, 0x16b36),
        intArrayOf(0x16f8f, 0x16f92),
        intArrayOf(0x1bc9d, 0x1bc9e),
        intArrayOf(0x1d167, 0x1d169),
        intArrayOf(0x1d17b, 0x1d182),
        intArrayOf(0x1d185, 0x1d18b),
        intArrayOf(0x1d1aa, 0x1d1ad),
        intArrayOf(0x1d242, 0x1d244),
        intArrayOf(0x1da00, 0x1da36),
        intArrayOf(0x1da3b, 0x1da6c),
        intArrayOf(0x1da75, 0x1da75),
        intArrayOf(0x1da84, 0x1da84),
        intArrayOf(0x1da9b, 0x1da9f),
        intArrayOf(0x1daa1, 0x1daaf),
        intArrayOf(0x1e000, 0x1e006),
        intArrayOf(0x1e008, 0x1e018),
        intArrayOf(0x1e01b, 0x1e021),
        intArrayOf(0x1e023, 0x1e024),
        intArrayOf(0x1e026, 0x1e02a),
        intArrayOf(0x1e8d0, 0x1e8d6),
        intArrayOf(0x1e944, 0x1e94a),
        intArrayOf(0xe0100, 0xe01ef)
    )

    // https://github.com/jquast/wcwidth/blob/master/wcwidth/table_wide.py
    // at commit 0d7de112202cc8b2ebe9232ff4a5c954f19d561a (2016-07-02):
    private val WIDE_EASTASIAN = arrayOf(
        intArrayOf(0x1100, 0x115f),
        intArrayOf(0x231a, 0x231b),
        intArrayOf(0x2329, 0x232a),
        intArrayOf(0x23e9, 0x23ec),
        intArrayOf(0x23f0, 0x23f0),
        intArrayOf(0x23f3, 0x23f3),
        intArrayOf(0x25fd, 0x25fe),
        intArrayOf(0x2614, 0x2615),
        intArrayOf(0x2648, 0x2653),
        intArrayOf(0x267f, 0x267f),
        intArrayOf(0x2693, 0x2693),
        intArrayOf(0x26a1, 0x26a1),
        intArrayOf(0x26aa, 0x26ab),
        intArrayOf(0x26bd, 0x26be),
        intArrayOf(0x26c4, 0x26c5),
        intArrayOf(0x26ce, 0x26ce),
        intArrayOf(0x26d4, 0x26d4),
        intArrayOf(0x26ea, 0x26ea),
        intArrayOf(0x26f2, 0x26f3),
        intArrayOf(0x26f5, 0x26f5),
        intArrayOf(0x26fa, 0x26fa),
        intArrayOf(0x26fd, 0x26fd),
        intArrayOf(0x2705, 0x2705),
        intArrayOf(0x270a, 0x270b),
        intArrayOf(0x2728, 0x2728),
        intArrayOf(0x274c, 0x274c),
        intArrayOf(0x274e, 0x274e),
        intArrayOf(0x2753, 0x2755),
        intArrayOf(0x2757, 0x2757),
        intArrayOf(0x2795, 0x2797),
        intArrayOf(0x27b0, 0x27b0),
        intArrayOf(0x27bf, 0x27bf),
        intArrayOf(0x2b1b, 0x2b1c),
        intArrayOf(0x2b50, 0x2b50),
        intArrayOf(0x2b55, 0x2b55),
        intArrayOf(0x2e80, 0x2e99),
        intArrayOf(0x2e9b, 0x2ef3),
        intArrayOf(0x2f00, 0x2fd5),
        intArrayOf(0x2ff0, 0x2ffb),
        intArrayOf(0x3000, 0x303e),
        intArrayOf(0x3041, 0x3096),
        intArrayOf(0x3099, 0x30ff),
        intArrayOf(0x3105, 0x312d),
        intArrayOf(0x3131, 0x318e),
        intArrayOf(0x3190, 0x31ba),
        intArrayOf(0x31c0, 0x31e3),
        intArrayOf(0x31f0, 0x321e),
        intArrayOf(0x3220, 0x3247),
        intArrayOf(0x3250, 0x32fe),
        intArrayOf(0x3300, 0x4dbf),
        intArrayOf(0x4e00, 0xa48c),
        intArrayOf(0xa490, 0xa4c6),
        intArrayOf(0xa960, 0xa97c),
        intArrayOf(0xac00, 0xd7a3),
        intArrayOf(0xf900, 0xfaff),
        intArrayOf(0xfe10, 0xfe19),
        intArrayOf(0xfe30, 0xfe52),
        intArrayOf(0xfe54, 0xfe66),
        intArrayOf(0xfe68, 0xfe6b),
        intArrayOf(0xff01, 0xff60),
        intArrayOf(0xffe0, 0xffe6),
        intArrayOf(0x16fe0, 0x16fe0),
        intArrayOf(0x17000, 0x187ec),
        intArrayOf(0x18800, 0x18af2),
        intArrayOf(0x1b000, 0x1b001),
        intArrayOf(0x1f004, 0x1f004),
        intArrayOf(0x1f0cf, 0x1f0cf),
        intArrayOf(0x1f18e, 0x1f18e),
        intArrayOf(0x1f191, 0x1f19a),
        intArrayOf(0x1f200, 0x1f202),
        intArrayOf(0x1f210, 0x1f23b),
        intArrayOf(0x1f240, 0x1f248),
        intArrayOf(0x1f250, 0x1f251),
        intArrayOf(0x1f300, 0x1f320),
        intArrayOf(0x1f32d, 0x1f335),
        intArrayOf(0x1f337, 0x1f37c),
        intArrayOf(0x1f37e, 0x1f393),
        intArrayOf(0x1f3a0, 0x1f3ca),
        intArrayOf(0x1f3cf, 0x1f3d3),
        intArrayOf(0x1f3e0, 0x1f3f0),
        intArrayOf(0x1f3f4, 0x1f3f4),
        intArrayOf(0x1f3f8, 0x1f43e),
        intArrayOf(0x1f440, 0x1f440),
        intArrayOf(0x1f442, 0x1f4fc),
        intArrayOf(0x1f4ff, 0x1f53d),
        intArrayOf(0x1f54b, 0x1f54e),
        intArrayOf(0x1f550, 0x1f567),
        intArrayOf(0x1f57a, 0x1f57a),
        intArrayOf(0x1f595, 0x1f596),
        intArrayOf(0x1f5a4, 0x1f5a4),
        intArrayOf(0x1f5fb, 0x1f64f),
        intArrayOf(0x1f680, 0x1f6c5),
        intArrayOf(0x1f6cc, 0x1f6cc),
        intArrayOf(0x1f6d0, 0x1f6d2),
        intArrayOf(0x1f6eb, 0x1f6ec),
        intArrayOf(0x1f6f4, 0x1f6f6),
        intArrayOf(0x1f910, 0x1f91e),
        intArrayOf(0x1f920, 0x1f927),
        intArrayOf(0x1f930, 0x1f930),
        intArrayOf(0x1f933, 0x1f93e),
        intArrayOf(0x1f940, 0x1f94b),
        intArrayOf(0x1f950, 0x1f95e),
        intArrayOf(0x1f980, 0x1f991),
        intArrayOf(0x1f9c0, 0x1f9c0),
        intArrayOf(0x20000, 0x2fffd),
        intArrayOf(0x30000, 0x3fffd)
    )

    private fun intable(table: Array<IntArray>, c: Int): Boolean {
        // First quick check f|| Latin1 etc. characters.
        if (c < table[0][0]) return false

        // Binary search in table.
        var bot = 0
        var top = table.size - 1 // (int)(size / sizeof(struct interval) - 1);
        while (top >= bot) {
            val mid = (bot + top) / 2
            if (table[mid][1] < c) {
                bot = mid + 1
            } else if (table[mid][0] > c) {
                top = mid - 1
            } else {
                return true
            }
        }
        return false
    }

    /**
     * Return the terminal display width of a code point: 0, 1 || 2.
     */
    @JvmStatic
    fun width(ucs: Int): Int {
        if (ucs == 0 || ucs == 0x034F || 0x200B <= ucs && ucs <= 0x200F || ucs == 0x2028 || ucs == 0x2029 || 0x202A <= ucs && ucs <= 0x202E || 0x2060 <= ucs && ucs <= 0x2063) {
            return 0
        }

        // C0/C1 control characters
        // Termux change: Return 0 instead of -1.
        if (ucs < 32 || 0x07F <= ucs && ucs < 0x0A0) return 0

        // combining characters with zero width
        if (intable(ZERO_WIDTH, ucs)) return 0
        return if (intable(WIDE_EASTASIAN, ucs)) 2 else 1
    }

    /**
     * The width at an index position in a java char array.
     */
    @JvmStatic
    fun width(chars: CharArray, index: Int): Int {
        val c = chars[index]
        return if (Character.isHighSurrogate(c)) width(
            Character.toCodePoint(
                c,
                chars[index + 1]
            )
        ) else width(c.code)
    }
}
